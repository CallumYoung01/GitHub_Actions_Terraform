name: Terraform Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'on-demand-pipelines/**'
  pull_request:
    branches:
      - main

env:
      ARM_TENANT_ID: test
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
      ARM_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCESS_KEY }}      


jobs:

  trivy_scan: 
    runs-on: ubuntu-latest
    name: "Trivy IaC Security Scan"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: check dir
        run: ls
        #working-directory: './your-directory'

      #- name: Run Trivy vulnerability scanner in IaC mode
      #  uses: aquasecurity/trivy-action@0.24.0
      #  with:
      #    scan-type: 'config'
      #    scan-path: '.'
          #working-directory: './Terraform'
          #path: '.'
          #working-directory: '.'
          #hide-progress: true
          #format: 'sarif'
          #output: 'trivy-results.sarif'
          #exit-code: '1'
          #ignore-unfixed: true
          #severity: 'CRITICAL,HIGH'

      #- name: Upload Trivy scan results to GitHub Security tab
      #  uses: github/codeql-action/upload-sarif@v2
      #  with:
      #    sarif_file: 'trivy-results.sarif'


  dev_deploy:
    runs-on: ubuntu-latest # The default hosted runner will need changing when the the storage account hosting the tfstate has public accessing disabled and private endpoint enabled. 
    name: "Dev Terraform Deploy"
    needs: trivy_scan
    environment: development 
    env: 
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
      name: Dev Deploy
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Dev Terraform
        id: dev-tf-deploy
        uses: ./.github/actions/terraform-deploy
        env:
          ARM_TENANT_ID: ${{ secrets.TERRAFORM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCESS_KEY }}
          WORKING_DIRECTORY: ./terraform
        with:
          environment: dev
          serviceprinciple_key: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          subscription_id: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}


  QA_deploy:
    name: "QA Terraform Deploy"
    runs-on: ubuntu-latest
    needs: dev_deploy
    #environment: development 
    env: 
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
      name: Dev Deploy
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: QA Terraform
        id: qa-tf-deploy
        uses: ./.github/actions/terraform-deploy
        env:
          ARM_TENANT_ID: ${{ secrets.TERRAFORM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCESS_KEY2 }}
          WORKING_DIRECTORY: ./terraform
        with:
          environment: qa
          serviceprinciple_key: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          subscription_id: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}          
  
